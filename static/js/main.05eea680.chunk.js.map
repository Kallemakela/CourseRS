{"version":3,"sources":["components/Course.js","components/CourseRec.js","db.js","App.js","serviceWorker.js","index.js"],"names":["Course","props","name","code","completed","handleClick","cssClasses","Card","className","onClick","id","Title","Subtitle","type","checked","readOnly","CourseRec","index","mIndex","Accordion","Toggle","as","Header","eventKey","toFixed","Collapse","Body","math","require","getRows","path","split","slice","recommendCourses","courseList","W","rows","entries","map","n","Number","push","getWeights","completedCourses","courseNames","i","length","completedLength","Math","max","filter","Boolean","courses","c","v","x","rankedCourses","multiply","filtered","exp","sort","a","b","courseRank","App","state","recommendedCourses","clickedCourse","setState","prevState","course","courseString","this","Tabs","defaultActiveKey","Tab","title","key","Component","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05eea680.chunk.js","sourcesContent":["import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nfunction Course(props) {\n  const { name, code, completed, handleClick } = props\n  const cssClasses = `p-2 m-3 course ${completed ? 'completed' : ''}`\n  return (\n    <Card\n      className={cssClasses}\n      onClick={() => handleClick(code)}\n    >\n      <div className='d-flex' id={code}>\n        <div className=\"p-2\">\n          <Card.Title>{name}</Card.Title>\n          <Card.Subtitle>{code}</Card.Subtitle>\n        </div>\n        <div className=\"ml-auto d-flex p-2\">\n          <input\n            type='checkbox'\n            className='checkbox'\n            checked={completed}\n            readOnly\n          />\n        </div>\n      </div>\n    </Card>\n  )\n}\n\nexport default Course","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\n\nfunction CourseRec(props) {\n  const { index, name, code, mIndex } = props\n  const cssClasses = `p-2 m-3 course`\n  return (\n    <Card className={cssClasses}>\n      <Accordion.Toggle as={Card.Header} eventKey={`${index}`}>\n        <div className=\"d-flex\">\n        <div className=\"p-2\">\n          <Card.Title>{name}</Card.Title>\n          <Card.Subtitle>{code}</Card.Subtitle>\n        </div>\n          <div className=\"ml-auto p-2\">Suitability: {mIndex.toFixed(0)}%</div>\n        </div>\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={`${index}`}>\n        <Card.Body>\n        <div className=\"d-flex\">\n          <div>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ornare quam nisl, id accumsan quam consectetur sit amet. In et felis vel augue venenatis sollicitudin. Vivamus tincidunt elit quis nibh volutpat consectetur. Etiam non suscipit erat. Nulla suscipit mauris nec faucibus sodales. Aliquam tincidunt neque a leo eleifend, sed auctor nisl condimentum. Fusce justo nibh, condimentum vitae diam in, lacinia volutpat magna. Suspendisse euismod vulputate leo eget ultricies.\n          </div>\n        </div>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  )\n}\n\nexport default CourseRec","const math = require('mathjs')\n// const fs = require('fs');\n\nconst PATH = './data/weights.csv'\n\n// weights.csv pasted here because we can't read local files in browser\nconst mockCsvStr = `,UWAS-C0036; Game Design and Production,DOM-E5089; Games Now!,CS-A1110; Programming 1,CS-C3170; Web Software Development,CS-E4800; Artificial Intelligence,CS-E3210; Machine Learning: Basic Principles,CS-C3160; Data Science,MS-C1343; Linear Algebra,MS-A0309; Differential and integral calculus 3,MS-C2111; Stochastic Processes,TU-C1030; Managerial accounting and finance for decision-makers,TU-C9260; Studio Course of Industrial Engineering and Management,TU-C9270; Introduction to Networks,TU-A1140; Leading and Understanding Oneself,TU-A1150; Philosophy and Systems Thinking,MUO-C0005; Design Theory and Methodology,ELEC-A4010; Electrical engineering workshop,TU-C1020; Creating Value,AAN-C2006; Product analysis,AAN-C2011; ADD basics\n0,0.82,0.63,0.62,0.54,0.69,0.57,0.54,0.34,0.3,0.48,0.45,0.3,0.15,0.31,0.27,0.0,0.1,0.13,0.0,0.0\n1,0.61,0.6,0.94,0.86,0.75,0.42,0.52,0.49,0.36,0.45,0.52,0.24,0.44,0.26,0.0,0.27,0.0,0.11,0.06,0.0\n2,0.73,0.94,0.61,0.59,0.78,0.69,0.67,0.7,0.65,0.58,0.31,0.21,0.44,0.31,0.04,0.06,0.06,0.0,0.19,0.0\n3,0.51,0.73,0.56,0.79,0.73,0.89,0.77,0.77,0.62,0.5,0.29,0.39,0.16,0.31,0.11,0.32,0.04,0.05,0.03,0.12\n4,0.65,0.8,0.65,0.56,0.9,0.82,0.71,0.53,0.59,0.67,0.51,0.45,0.36,0.19,0.28,0.07,0.4,0.14,0.0,0.01\n5,0.5,0.71,0.63,0.57,0.82,0.65,0.56,0.89,0.83,0.53,0.41,0.41,0.6,0.57,0.33,0.33,0.16,0.01,0.1,0.22\n6,0.42,0.53,0.64,0.75,0.61,0.95,0.88,0.77,0.72,0.51,0.46,0.63,0.5,0.33,0.55,0.27,0.27,0.33,0.06,0.27\n7,0.31,0.41,0.67,0.42,0.51,0.74,0.86,0.78,0.76,0.81,0.63,0.58,0.42,0.6,0.35,0.39,0.33,0.26,0.16,0.08\n8,0.35,0.42,0.56,0.68,0.69,0.75,0.72,0.71,0.77,0.74,0.7,0.66,0.54,0.37,0.4,0.57,0.54,0.44,0.17,0.08\n9,0.3,0.39,0.53,0.56,0.52,0.4,0.83,0.82,0.91,0.76,0.65,0.59,0.8,0.51,0.57,0.32,0.46,0.56,0.27,0.33\n10,0.17,0.24,0.44,0.51,0.48,0.62,0.52,0.64,0.52,0.56,0.85,0.6,0.53,0.8,0.65,0.45,0.41,0.61,0.57,0.54\n11,0.27,0.18,0.41,0.59,0.34,0.31,0.42,0.41,0.83,0.74,0.89,0.88,0.56,0.77,0.66,0.42,0.38,0.61,0.34,0.41\n12,0.31,0.39,0.43,0.16,0.48,0.34,0.52,0.62,0.51,0.73,0.52,0.73,0.71,0.64,0.86,0.82,0.61,0.55,0.42,0.43\n13,0.0,0.27,0.17,0.49,0.28,0.29,0.37,0.38,0.57,0.8,0.72,0.52,0.82,0.75,0.82,0.56,0.79,0.61,0.55,0.42\n14,0.0,0.21,0.2,0.25,0.28,0.22,0.54,0.38,0.43,0.52,0.6,0.69,0.8,0.84,0.68,0.89,0.54,0.71,0.63,0.74\n15,0.0,0.18,0.0,0.06,0.21,0.16,0.21,0.24,0.41,0.62,0.6,0.74,0.8,0.64,0.64,0.6,0.92,0.57,0.84,0.41\n16,0.0,0.15,0.25,0.23,0.09,0.43,0.42,0.25,0.35,0.59,0.42,0.52,0.77,0.72,0.67,0.75,0.7,0.64,0.56,0.81\n17,0.11,0.0,0.24,0.14,0.02,0.09,0.24,0.41,0.53,0.32,0.58,0.55,0.63,0.77,0.56,0.64,0.68,0.62,0.77,0.72\n18,0.0,0.0,0.0,0.21,0.24,0.0,0.39,0.08,0.44,0.55,0.4,0.39,0.45,0.5,0.76,0.77,0.52,0.72,0.96,0.55\n19,0.0,0.0,0.0,0.0,0.0,0.01,0.3,0.13,0.16,0.24,0.45,0.44,0.26,0.63,0.52,0.48,0.82,0.54,0.78,0.82\n`\n\nconst getRows = (path) => {\n  // Uncomment to read from weights.csv (can't do in browser)\n  // const csvString = fs.readFileSync(path, {encoding: 'utf8'})\n  const csvString = mockCsvStr \n  return csvString.split('\\n').slice(0,-1)\n}\n\nconst getWeights = (path) => {\n  const rows = getRows(path).slice(1)\n  const W = []\n  for (let row of rows) {\n    const entries = row.split(',').slice(1).map(n => Number(n))\n    W.push(entries)\n  }\n  return W\n}\n\nexport const getCourses = (path) => {\n  const courses = getRows(path)[0].slice(1).split(',')\n  return courses.map((courseString, index) => {\n    const [code, name] = courseString.split(';')\n    return {\n      index,\n      code,\n      name,\n      completed: false,\n    }\n  })\n}\n\nconst sigmoid = (c, v, x) => {\n  return c/(c+Math.exp(-v*x))\n}\n\nexport const recommendCourses = (courseList) => {\n  const W = getWeights(PATH)\n  const completedCourses = []\n  const courseNames = []\n  for (let i = 0; i< courseList.length;i++){\n    completedCourses.push(courseList[i].completed)\n    courseNames.push(courseList[i].name)\n  }\n  const completedLength = Math.max(1, completedCourses.filter(Boolean).length)\n  const courseRank = (courses, W) => {\n    const rankedCourses = math.multiply(courses, W)\n    const filtered = []\n    for (let i = 0; i < courses.length; i++) {\n      if (!courses[i]) {\n        filtered.push({\n          name: courseNames[i],\n          code:courseList[i].code,\n          mIndex: sigmoid(0.0111, 9, rankedCourses[i] / completedLength) * 100,\n          // mIndex: rankedCourses[i] / completedLength * 100,\n          // mIndex: rankedCourses[i]/l + (0.99 - rankedCourses[i]/l) * (1/4 * (Math.log(Math.max(0.019, rankedCourses[i]/l))) + 1)\n        })\n      }\n    }\n    return filtered.sort((a, b) => b.mIndex-a.mIndex)\n  }\n  return courseRank(completedCourses, W)\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Course from './components/Course'\nimport CourseRec from './components/CourseRec'\nimport { recommendCourses, getCourses } from'./db'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Accordion from 'react-bootstrap/Accordion'\n\nclass App extends Component {\n\n  state = {\n    courses: [],\n    recommendedCourses: [],\n  }\n  \n  handleClick = (clickedCourse) => {\n    this.setState(prevState => {\n      const courses = prevState.courses.map(course => {\n        if (course.code === clickedCourse) {\n          course.completed = !course.completed\n        }\n        return course\n      })\n      return {\n        courses,\n        recommendedCourses: recommendCourses(courses)\n      }\n    })\n  }\n\n  componentDidMount() {\n    const courses = getCourses('./data/weights.csv')\n    this.setState({\n      courses,\n      recommendedCourses: recommendCourses(courses),\n    })\n  }\n\n  render() {\n    const { courses, recommendedCourses } = this.state\n    return (\n      <div className=\"App\">\n        <Tabs defaultActiveKey='completed'>\n          <Tab eventKey=\"completed\" title=\"Completed\">\n            <div>\n              {courses.map(c => (\n                <Course\n                  key={c.code}\n                  name={c.name}\n                  code={c.code}\n                  completed={c.completed}\n                  handleClick={this.handleClick}\n                />\n              ))}\n            </div>\n          </Tab>\n          <Tab eventKey=\"recommendations\" title=\"Recommendations\">\n            <div className='mt-1'>\n              <Accordion>\n                {recommendedCourses.map((c, i) => (\n                  <CourseRec\n                    index={i}\n                    key={c.code}\n                    name={c.name}\n                    code={c.code}\n                    mIndex={c.mIndex}  \n                  />\n                ))}\n              </Accordion>\n           </div>\n          </Tab>\n        </Tabs>\n     </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}